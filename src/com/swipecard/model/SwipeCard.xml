<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swipecard.model.SwipeCardMapper">
	<select id="selectUserByRCNo" parameterType="int" resultType="RCLine">
		select * from SWIPE.ERP_RC_BASE where RC_NO = #{RC_NO}
	</select>

	<select id="selectUserByCardID" parameterType="String"
		resultType="Employee">
		select * from SWIPE.CSR_EMPLOYEE where CardID = #{CardID}
		and isOnWork=0
	</select>

	<select id="selectUserByCardIDAndPer" parameterType="String"
		resultType="Employee">
		select * from SWIPE.CSR_EMPLOYEE where cardid = #{cardid}
		and
		Permission = 1 and isOnWork=0
	</select>

	<select id="selectWorkshopNo" parameterType="String" resultType="LineNO">
		SELECT WorkshopNo FROM SWIPE.lineno WHERE WorkshopNo is not null GROUP
		BY WorkshopNo
	</select>

	<select id="selectUserByPermission" parameterType="String"
		resultType="Employee">
		select CardID from SWIPE.CSR_EMPLOYEE where Permission = 1
		and isOnWork=0
	</select>

	<select id="selectUserByLineNoAndWorkshopNo" parameterType="SwipeCardTimeInfos"
		resultType="SwipeCardTimeInfos">
		SELECT EMP_ID,
		RC_NO,
		SwipeCardTime,
		SwipeCardTime2
		FROM SWIPE.CSR_SWIPECARDTIME
		WHERE
		WorkshopNo = #{WorkshopNo}
		AND <![CDATA[ swipecardtime >to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd')]]>
	</select>

	<select id="selectUserByLineNoAndWorkshopNo_DShift"
		parameterType="SwipeCardTimeInfos" resultType="SwipeCardTimeInfos">
		SELECT
		a.EMP_ID,a.RC_NO,a.SwipeCardTime,a.SwipeCardTime2
		FROM
		SWIPE.CSR_SWIPECARDTIME a
		left join SWIPE.CSR_EMPLOYEE b on a.EMP_ID=b.Id
		WHERE
		WorkshopNo = #{WorkshopNo}
		and NVL(a.prod_line_code,'0') = #{ProdLineCode}
		and
		Shift = 'D'
		AND to_char(SwipeCardTime,'yyyy-MM-dd') =
		to_char(sysdate,'yyyy-MM-dd') 
		order by a.EMP_ID asc
	</select>

	<select id="selectUserByLineNoAndWorkshopNo_NShift"
		parameterType="SwipeCardTimeInfos" resultType="SwipeCardTimeInfos">
		SELECT
		a.EMP_ID,a.RC_NO,a.SwipeCardTime,a.SwipeCardTime2
		FROM
		SWIPE.CSR_SWIPECARDTIME a
		left join SWIPE.CSR_EMPLOYEE b on a.EMP_ID=b.Id
		WHERE
		WorkshopNo = #{WorkshopNo}
		and NVL(a.prod_line_code,'0') = #{ProdLineCode}
		and shift = 'N'
		and
		to_char(#{SwipeCardTime}-interval '12' hour,'yyyy-MM-dd')=
		to_char(swipecardtime-interval '12' hour,'yyyy-MM-dd') 
		order by a.EMP_ID asc
	</select>

	<select id="selectUserByEmpId" parameterType="String"
		resultType="Employee">
		select * from SWIPE.CSR_EMPLOYEE where id=#{Id} and
		isOnWork=0
	</select>

	<select id="selectCountAByCardID" parameterType="SwipeCardTimeInfos"
		resultType="int">
		SELECT count(*)
		FROM SWIPE.CSR_SWIPECARDTIME
		WHERE EMP_ID = #{EMP_ID}
		AND SwipeCardTime is not NULL
		AND Shift = #{Shift}
		AND <![CDATA[ SwipeCardTime >  to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd') and SwipeCardTime < to_date(to_char(sysdate+1,'yyyy-MM-dd'),'yyyy-MM-dd') ]]>
	</select>

	<select id="selectCountBByCardID" parameterType='SwipeCardTimeInfos'
		resultType="int">
		select count(*) from SWIPE.CSR_SWIPECARDTIME where EMP_ID = #{EMP_ID}
		AND Shift = #{Shift}
		AND SwipeCardTime2 is not NULL
		and <![CDATA[ SwipeCardTime > to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd') and SwipeCardTime < to_date(to_char(sysdate+1,'yyyy-MM-dd'),'yyyy-MM-dd') ]]>
	</select>

	<select id="selectCountNByCardID" parameterType='SwipeCardTimeInfos'
		resultType="int">
		select count(*) from SWIPE.CSR_SWIPECARDTIME where EMP_ID = #{EMP_ID}
		AND Shift = #{Shift}
		AND SwipeCardTime2 is not NULL
		and <![CDATA[ SwipeCardTime > to_date(to_char(sysdate-1,'yyyy-MM-dd'),'yyyy-MM-dd') and SwipeCardTime < to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd')]]>
	</select>

	<select id="selectGoWorkNByCardID" parameterType='SwipeCardTimeInfos'
		resultType="int">
		select count(*) from SWIPE.CSR_SWIPECARDTIME where EMP_ID = #{EMP_ID}
		AND Shift = #{Shift}
		AND SwipeCardTime is not NULL
		and <![CDATA[ SwipeCardTime > to_date(to_char(sysdate-1,'yyyy-MM-dd'),'yyyy-MM-dd') and SwipeCardTime < to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd')]]>
	</select>

	<select id="selectOutWorkByCardID" parameterType='SwipeCardTimeInfos'
		resultType="int">
		select count(*) from SWIPE.CSR_SWIPECARDTIME where EMP_ID = #{EMP_ID}
		AND Shift = #{Shift}
		AND SwipeCardTime is NULL and SwipeCardTime2 is
		not null
		and <![CDATA[ SwipeCardTime2 > to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd') and SwipeCardTime2 < to_date(to_char(sysdate+1,'yyyy-MM-dd'),'yyyy-MM-dd') ]]>
	</select>

	<update id="updateOutWorkDSwipeTime" parameterType="SwipeCardTimeInfos">
		update SWIPE.CSR_SWIPECARDTIME set SwipeCardTime2 = #{SwipeCardTime2}
		WHERE EMP_ID = #{EMP_ID}
		and Shift = #{Shift}
		and <![CDATA[ to_char(SwipeCardTime,'yyyy-MM-dd') = to_char(sysdate,'yyyy-MM-dd')  ]]>
	</update>

	<insert id="insertOutWorkSwipeTime" parameterType="SwipeCardTimeInfos">
		INSERT INTO
		SWIPE.CSR_SWIPECARDTIME
		(EMP_ID,SWIPE_DATE,SwipeCardTime2,WorkshopNo,PRIMARY_ITEM_NO,
		SHIFT,CLASS_NO,PROD_LINE_CODE)
		VALUES
		(#{EMP_ID},#{SWIPE_DATE},
		#{SwipeCardTime2}, #{WorkshopNo}, #{PRIMARY_ITEM_NO},
		#{Shift},#{CLASS_NO},#{ProdLineCode})
	</insert>

	<update id="updateOutWorkNSwipeTime" parameterType="SwipeCardTimeInfos">
		update SWIPE.CSR_SWIPECARDTIME set SwipeCardTime2 = #{SwipeCardTime2}
		WHERE EMP_ID = #{EMP_ID}
		and Shift = #{Shift}
		and <![CDATA[ to_char(SwipeCardTime,'yyyy-MM-dd') = to_char(#{SwipeCardTime2}-interval '12' hour,'yyyy-MM-dd')  ]]>
	</update>

	<select id="isGoWorkSwipeDuplicate" parameterType="SwipeCardTimeInfos"
		resultType="int">
		SELECT count(*)
		FROM SWIPE.CSR_SWIPECARDTIME
		WHERE EMP_ID = #{EMP_ID}
		and to_char(SwipeCardTime,'yyyy-MM-dd')= to_char(sysdate,'yyyy-MM-dd')
		AND swipecardtime > #{SwipeCardTime}-10/24/60
	</select>

	<select id="isOutWorkSwipeDuplicate" parameterType="SwipeCardTimeInfos"
		resultType="int">
		SELECT count(*)
		FROM SWIPE.CSR_SWIPECARDTIME
		WHERE EMP_ID = #{EMP_ID}
		and to_char(SwipeCardTime2,'yyyy-MM-dd')= to_char(sysdate,'yyyy-MM-dd')
		AND swipecardtime2 > #{SwipeCardTime2}-10/24/60
	</select>

	<select id="selectRCNo" parameterType="RCLine" resultType="RCLine">
		SELECT RC_NO FROM SWIPE.ERP_RC_BASE WHERE <![CDATA[ creation_date > sysdate -3 ]]>
		order by creation_date desc,rc_no desc
	</select>

	<insert id="insertUserByOnDNShift" parameterType="int">
		INSERT INTO
		SWIPE.CSR_SWIPECARDTIME
		(EMP_ID,SWIPE_DATE,SwipeCardTime,WorkshopNo,PRIMARY_ITEM_NO,SHIFT,CLASS_NO,PROD_LINE_CODE)
		VALUES
		( #{EMP_ID}, #{SWIPE_DATE}, #{SwipeCardTime}, #{WorkshopNo},
		#{PRIMARY_ITEM_NO}, #{Shift},#{CLASS_NO},#{ProdLineCode})
	</insert>

	<update id="updateChangeLineUserByOnDuty" parameterType="SwipeCardTimeInfos">
		update SWIPE.CSR_SWIPECARDTIME set SwipeCardTime2 = #{SwipeCardTime2}
		WHERE WorkshopNo=#{WorkshopNo}
		and <![CDATA[ SwipeCardTime >  to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd')  ]]>
	</update>

	<update id="Update_rcno_ByLineNOandCardID" parameterType="SwipeCardTimeInfos">
		UPDATE SWIPE.CSR_SWIPECARDTIME
		SET RC_NO = #{RC_NO},
		PRIMARY_ITEM_NO=#{PRIMARY_ITEM_NO}
		WHERE
		EMP_ID=#{EMP_ID}
		AND  <![CDATA[ swipecardtime >to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd')]]>


	</update>
	<update id="Update_rcno_ByLineNOandCardID_N" parameterType="SwipeCardTimeInfos">
		UPDATE SWIPE.CSR_SWIPECARDTIME
		SET RC_NO = #{RC_NO},
		PRIMARY_ITEM_NO=#{PRIMARY_ITEM_NO}
		WHERE
		WorkshopNo=#{WorkshopNo}
		and <![CDATA[ to_char(SwipeCardTime,'yyyy-MM-dd') = to_char(sysdate-interval '12' hour,'yyyy-MM-dd')  ]]>
	</update>

	<select id="selectLoseEmployee" parameterType="RawRecord"
		resultType="int">
		select count(cardid) from SWIPE.raw_record where cardid=#{CardID} and
		to_char(#{SwipeCardTime},'yyyy-MM-dd')=to_char(SwipeCardTime,'yyyy-MM-dd')
	</select>

	<insert id="insertRCInfo" parameterType="RCLine">
		INSERT INTO
		SWIPE.CSR_RC_LINE
		(rc_no,primary_item_no,prod_line_code,cur_date)
		VALUES
		(#{RC_NO},#{PRIMARY_ITEM_NO},#{PROD_LINE_CODE},sysdate)
	</insert>

	<select id="curDayGoWorkCardCount" parameterType="int"
		resultType="int">
		select count(*) from SWIPE.CSR_SWIPECARDTIME where EMP_ID = #{EMP_ID}
		AND WorkshopNo = #{WorkshopNo}
		AND SwipeCardTime2 is NULL
		and <![CDATA[ swipecardtime >to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd') and SwipeCardTime < to_date(to_char(sysdate+1,'yyyy-MM-dd'),'yyyy-MM-dd') ]]>
	</select>

	<select id="getShiftCount" parameterType="EmpShiftInfos"
		resultType="int">
		select count(*) from SWIPE.emp_class a,SWIPE.classno b
		where a.class_no=b.class_no and id=#{id} and
		to_char(a.emp_date,'yyyy-MM-dd') =
		to_char(sysdate-#{shiftDay},'yyyy-MM-dd')
	</select>

	<select id="getShiftByEmpId" parameterType="EmpShiftInfos"
		resultType="EmpShiftInfos">
		select a.id,to_char(a.emp_date,'yyyy-MM-dd')
		emp_date,a.class_no,b.class_desc,b.shift,
		to_timestamp(concat(to_char(sysdate,'yyyy-MM-dd'),b.class_start),'yyyy-MM-dd
		HH24:mi:ss') as class_start,
		to_timestamp(concat(to_char(sysdate,'yyyy-MM-dd'),b.class_end),'yyyy-MM-dd
		HH24:mi:ss') as class_end
		from SWIPE.emp_class a,SWIPE.classno b
		where a.class_no=b.class_no and id=#{id}
		and
		to_char(a.emp_date,'yyyy-MM-dd')=to_char(sysdate-#{shiftDay},'yyyy-MM-dd')
	</select>

	<select id="getDayRecord" parameterType="int" resultType="int">
		SELECT
		count(recordid)
		FROM
		SWIPE.CSR_SWIPECARDTIME
		WHERE ((
		to_char(swipecardtime,'yyyy-MM-dd') = to_char(sysdate-#{shiftDay},'yyyy-MM-dd')
		or to_char(swipecardtime2, 'yyyy-MM-dd') =
		to_char(sysdate-#{shiftDay},'yyyy-MM-dd')
		and shift='D')
		or(
		to_char(swipecardtime,'yyyy-MM-dd') = to_char(sysdate-#{shiftDay},'yyyy-MM-dd')
		and swipecardtime2 is null
		and shift='N'
		))
		AND EMP_ID = #{EMP_ID}
	</select>

	<!-- Check Current Version in Database -->
	<select id="getCurrentVersionFromDB" resultType="hashmap">
		select version,sysdate as db_time
		from SWIPE.Swipecard_Version
		where is_avaliable='T'
		and Prog_Name='SwipeCardLZJ'
	</select>

	<!-- Check Continues workers(7 days) -->
	<select id="getContinuesWorker" statementType="CALLABLE"
		parameterType="java.util.Map" resultType="int"> resultType="java.util.Map"
		{call
		swipecard.GET_CONTINUS_WORK_DAYS(#{newCardID,jdbcType=VARCHAR,javaType=STRING,mode=IN})}
	</select>

	<!-- Check Continues workers(N days) -->
	<select id="getOneWeekWorkDays" parameterType="EmpShiftInfos"
		resultType="int">
		SELECT count(*) FROM SWIPE.CSR_SWIPECARDTIME where         
            <![CDATA[ to_date(SWIPE_DATE,'yyyy-MM-dd') >to_date(to_char(sysdate-7,'yyyy-MM-dd'),'yyyy-MM-dd') 
           AND to_date(SWIPE_DATE,'yyyy-MM-dd') < to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd')]]>
		AND EMP_ID = #{Id}
	</select>

	<select id="getTwoDayBeforWorkDays" parameterType="EmpShiftInfos"
		resultType="int">
		SELECT count(*) FROM SWIPE.CSR_SWIPECARDTIME where         
            <![CDATA[ to_date(SWIPE_DATE,'yyyy-MM-dd') >to_date(to_char(sysdate-8,'yyyy-MM-dd'),'yyyy-MM-dd') 
           AND to_date(SWIPE_DATE,'yyyy-MM-dd') < to_date(to_char(sysdate-1,'yyyy-MM-dd'),'yyyy-MM-dd')]]>
		AND EMP_ID = #{Id}
	</select>

	<!-- Check On Duty time is between Class on duty time - 15 mins and Class 
		on duty time -->
	<select id="getOnDutyTimeValid" statementType="CALLABLE"
		parameterType="java.util.Map" resultType="java.util.Map">
		{call
		swipecard.VALIDATE_ON_DUTY_TIME(#{onDutyTime,jdbcType=DATE,javaType=DATE,mode=IN}),#{empID,jdbcType=VARCHAR,javaType=STRING,mode=IN},#{isOnDutyTimeValid,jdbcType=INTEGER,javaType=int,mode=out})}
	</select>

	<!-- Insert row swipe record to raw_record table -->
	<insert id="addRawSwipeRecord" parameterType="RawRecord">
		<if test="Record_Status==null">
			INSERT INTO SWIPE.raw_record
			(Id,CardID,SwipeCardTime,update_time,ip_address,workshopno,lineno)
			VALUES
			(#{Id},#{CardID},#{SwipeCardTime},sysdate,#{swipeCardHostIp},#{WorkshopNo},#{LineNo})
		</if>
		<if test="Record_Status!=null">
			INSERT INTO SWIPE.raw_record
			(Id,CardID,SwipeCardTime,update_time,record_status,ip_address,workshopno,lineno)
			VALUES
			(#{Id},#{CardID},#{SwipeCardTime},sysdate,#{Record_Status},#{swipeCardHostIp},#{WorkshopNo},#{LineNo})
		</if>
	</insert>

	<update id="updateRawRecordStatus" parameterType="RawRecord">
		update SWIPE.raw_record set record_status = #{Record_Status}
		WHERE CardID=#{CardID}
		and to_char(swipecardtime,'yyyy-MM-dd HH24:mi:ss')
		=to_char(#{SwipeCardTime},'yyyy-MM-dd HH24:mi:ss')
		<if test="Id!=null">
			and ID = #{Id}
		</if>
		<if test="Id==null">
			and ID is null
		</if>
	</update>

	<select id="selectLineNoList" resultType="LineNO">
		SELECT distinct workshopno,lineno from SWIPE.lineno order by
		workshopno,lineno
	</select>

	<select id="getIpByControl_except" parameterType="String"
		resultType="String">
		SELECT com_ip
		FROM SWIPE.app_login_control WHERE
		control_except = #{control_except}
	</select>

	<select id="isAdminByCardID" parameterType="int" resultType="int">
		select count(*) from SWIPE.csr_employee where
		cardid=#{cardid}
		and Permission=1
		and isOnWork=0
	</select>
	
	<select id="selectEmpByLineNoAndWorkshopNo"
		parameterType="SwipeCardTimeInfos" resultType="SwipeCardTimeInfos">
		SELECT
	    a.EMP_ID,a.swipe_date,a.SwipeCardTime
	    FROM
	    SWIPE.CSR_SWIPECARDTIME a
	    left join SWIPE.CSR_EMPLOYEE b on a.EMP_ID=b.Id
	    WHERE
	    (case when a.workshopno_c is null then a.workshopno else a.workshopno_c end) = #{WorkshopNo} 
	    and (case when a.workshopno_c is null then NVL(a.prod_line_code,'0') else NVL(a.prod_line_code_c,'0') end) = #{ProdLineCode} 
	    and a.shift = #{Shift}
	    and a.swipe_date = to_char(#{SwipeCardTime},'yyyy-mm-dd') 
	    and a.swipecardtime2 is null
	    order by a.EMP_ID asc
	</select>
	
	<select id="selectEmpCountByLineNoAndWorkshopNo"
		parameterType="SwipeCardTimeInfos" resultType="int">
		SELECT
	    count(*)
	    FROM
	    SWIPE.CSR_SWIPECARDTIME a
	    WHERE
	    (case when a.workshopno_c is null then a.workshopno else a.workshopno_c end) = #{WorkshopNo} 
	    and (case when a.workshopno_c is null then NVL(a.prod_line_code,'0') else NVL(a.prod_line_code_c,'0') end) = #{ProdLineCode} 
	    and a.shift = #{Shift}
	    and a.swipe_date = to_char(#{SwipeCardTime},'yyyy-mm-dd') 
	    and a.swipecardtime2 is null 
	</select>
	
	<select id="selectRepairWorkshopNo" parameterType="String" resultType="String">
		select distinct(t.workshopno) from SWIPE.WORKSHOP_LINE_STATUS t where t.enabled = 'Y' order by t.workshopno asc
	</select>
	
	<select id="getRepairLineNoStatus" parameterType="String" resultType="RepairWorkshopNo">
		select * from SWIPE.WORKSHOP_LINE_STATUS t 
		where t.workshopno = #{workshopno} and t.enabled = 'Y' order by instr( '1,2,3,4,5,6,7,8,9,0',rtrim(cast(t.status as nchar))),lineno
	</select>
	
	<select id="isRepairWorkshopNo" parameterType="RawRecord" resultType="int">
		select count(*) from SWIPE.WORKSHOP_LINE_STATUS t where t.workshopno = #{WorkshopNo} and nvl(t.lineno,'0') = #{LineNo} and t.enabled = 'Y'
	</select>
	
	<select id="getRepairInfo" parameterType="RawRecord" resultType="RepairWorkshopNo">
		select * from SWIPE.WORKSHOP_LINE_STATUS t 
		where t.workshopno = #{WorkshopNo} and t.enabled = 'Y' and nvl(t.lineno,'0') = #{LineNo}
	</select>
	
	<insert id="addRepairSwipecardIn" parameterType="RepairSwipecard">
			insert into SWIPE.WORKSHOP_LINE_SWIPECARD(ID,Workshopno,Lineno,Swipe_In,Reason_No,Recv_id,swipe_type,emp_privilege_level) values(#{Id},#{WorkshopNo},#{LineNo},#{Swipe_In},#{Reason_No},#{Recv_id},#{SwipeType},#{PrivilegeLevel})
	</insert>
	
	<insert id="addLineLeaderSwipecardIn" parameterType="RepairSwipecard">
			insert into SWIPE.WORKSHOP_LINE_SWIPECARD(ID,Workshopno,Lineno,Swipe_In,Reason_No,Recv_id,swipe_type,emp_privilege_level) values(#{Id},#{WorkshopNo},#{LineNo},#{Swipe_In},#{Reason_No},#{Recv_id},#{SwipeType},#{PrivilegeLevel})
	</insert>
	
	<insert id="addLineLeaderSwipecardOut" parameterType="RepairSwipecard">
			insert into SWIPE.WORKSHOP_LINE_SWIPECARD(ID,Workshopno,Lineno,Swipe_Out,Reason_No,Recv_id,swipe_type,emp_privilege_level) values(#{Id},#{WorkshopNo},#{LineNo},#{Swipe_In},#{Reason_No},#{Recv_id},#{SwipeType},#{PrivilegeLevel})
	</insert>
	
	<update id="updateRepairSwipecardOut" parameterType="RepairSwipecard">
		update  SWIPE.WORKSHOP_LINE_SWIPECARD t set t.swipe_out = #{Swipe_Out}
		<if test="Reason_No!=null">
			,t.reason_no = #{Reason_No} 
		</if>
		where t.id = #{Id} and t.workshopno = #{WorkshopNo} and t.swipe_out is null and t.recv_id = #{Recv_id} and t.swipe_type = '1' and t.emp_privilege_level = '2'
		<if test="LineNo!=null">
			and t.lineno = #{LineNo}
		</if>
		<if test="LineNo==null">
			and t.lineno is null
		</if>
	</update>
	
	<update id="updateRepairStatus" parameterType="RepairWorkshopNo">
		update SWIPE.WORKSHOP_LINE_STATUS t set t.status = #{Status},t.update_time = #{Update_time},t.update_userid = #{Update_userid}
		<if test="Recv_id!=null">
			,t.Recv_id = #{Recv_id}
		</if> 
		 where t.workshopno = #{WorkshopNo}
		<if test="Lineno!=null">
			and t.lineno = #{Lineno}
		</if>
		<if test="Lineno==null">
			and t.lineno is null
		</if>
	</update>
	
	<select id="selectrepairEmpSwipecardCount" parameterType="RepairSwipecard" resultType="int">
		select count(*) from SWIPE.WORKSHOP_LINE_SWIPECARD t 
		where t.id = #{Id} and t.workshopno = #{WorkshopNo} and t.swipe_out is null and t.recv_id = #{Recv_id} and t.swipe_type = '1' and t.emp_privilege_level = '2'
		<if test="LineNo!=null">
			and t.lineno = #{LineNo}
		</if>
		<if test="LineNo==null">
			and t.lineno is null
		</if>
	</select>
	
	<select id="selectNoSwipeOutCount" parameterType="RepairWorkshopNo" resultType="int">
	select count(*) from SWIPE.WORKSHOP_LINE_SWIPECARD t ,SWIPE.csr_employee a 
	where t.id = a.id and a.isonwork = '0' and  t.workshopno = #{WorkshopNo} and t.swipe_out is null and t.recv_id = #{Recv_id} and t.swipe_type = '1' and t.emp_privilege_level = '2'
		<if test="Lineno!=null">
			and t.lineno = #{Lineno}
		</if>
		<if test="Lineno==null">
			and t.lineno is null
		</if>
	</select>
	
	<select id="selectNoSwipeOut" parameterType="RepairWorkshopNo" resultType="Employee">
		select a.* from SWIPE.WORKSHOP_LINE_SWIPECARD t,SWIPE.csr_employee a 
		where t.id = a.id and a.isonwork = '0' and  t.workshopno = #{WorkshopNo} and t.swipe_out is null and t.recv_id = #{Recv_id} and t.swipe_type = '1' and t.emp_privilege_level = '2'
		<if test="Lineno!=null">
			and t.lineno = #{Lineno}
		</if>
		<if test="Lineno==null">
			and t.lineno is null
		</if>
	</select>
	
	<update id="updateSwipecardOut" parameterType="RepairSwipecard">
		update  SWIPE.WORKSHOP_LINE_SWIPECARD t set t.swipe_out = #{Swipe_Out}
		<if test="Reason_No!=null">
			,t.reason_no = #{Reason_No} 
		</if>
		where t.workshopno = #{WorkshopNo} and t.swipe_out is null and t.recv_id = #{Recv_id} and t.swipe_type = #{SwipeType} and t.emp_privilege_level = #{PrivilegeLevel}
		<if test="LineNo!=null">
			and t.lineno = #{LineNo}
		</if>
		<if test="LineNo==null">
			and t.lineno is null
		</if>
	</update>
	
	<update id="updateSwipecardEnd" parameterType="RepairSwipecard">
		update  SWIPE.WORKSHOP_LINE_SWIPECARD t set t.swipe_out = #{Swipe_Out}
		<if test="Reason_No!=null">
			,t.reason_no = #{Reason_No} 
		</if>
		where t.workshopno = #{WorkshopNo} and t.swipe_out is null and t.recv_id = #{Recv_id} and t.swipe_type = '1' and t.emp_privilege_level != '1'
		<if test="LineNo!=null">
			and t.lineno = #{LineNo}
		</if>
		<if test="LineNo==null">
			and t.lineno is null
		</if>
	</update>
	
	<update id="updateStatus" parameterType="RepairWorkshopNo">
		update SWIPE.WORKSHOP_LINE_STATUS t set t.status = #{Status},t.update_time = #{Update_time}
		where t.workshopno = #{WorkshopNo} 
		<if test="Lineno!=null">
			and t.lineno = #{Lineno}
		</if>
		<if test="Lineno==null">
			and t.lineno is null
		</if>
	</update>
	
	<select id="selectReasonClassList" resultType="String">
		select distinct(t.reason_class) from SWIPE.PDLINE_MAINTENANCE_REASONS t where t.enabled = 'Y'
	</select>
	
	<select id="selectReasonDescList" parameterType="String" resultType="RepairReasons">
		select * from SWIPE.PDLINE_MAINTENANCE_REASONS t where t.Reason_Class = #{Reason_Class} and t.enabled = 'Y'
	</select>
	
	<select id="getJobCode" parameterType="String" resultType="String">
		select b.job_code from SWIPE.FOXLINK_JOB_INFO b where b.job_desc like #{job_desc}
	</select>
	
	<select id="getLineLeaderJobCode" resultType="String">
		select * from SWIPE.FOXLINK_JOB_INFO b where b.job_desc like '%生產技術%' or b.job_desc like '%線長%' or b.job_desc like '%全技員%'
	</select>
	
	<select id="getQCJobCode" parameterType="String" resultType="String">
		select b.job_code from SWIPE.FOXLINK_JOB_INFO b where b.job_desc like '%品檢%' or b.job_desc like '%品管%'
	</select>
	
	<select id="getPrivilegeCount" parameterType="String" resultType="int">
		select count(*) from SWIPE.EMP_PRIVILEGE_LEVEL t where t.id = #{id} and t.enabled = 'Y'
	</select>
	
	<select id="selectPrivilegeLevel" parameterType="String" resultType="String">
		select privilege_level from SWIPE.EMP_PRIVILEGE_LEVEL t where t.id = #{id} and t.enabled = 'Y'
	</select>
	
	<update id="updateStatusEnd" parameterType="RepairWorkshopNo">
		update SWIPE.WORKSHOP_LINE_STATUS t set t.status = #{Status},t.update_time = #{Update_time},t.Update_userid = #{Update_userid} 
		where t.workshopno = #{WorkshopNo} 
		<if test="Lineno!=null">
			and t.lineno = #{Lineno}
		</if>
		<if test="Lineno==null">
			and t.lineno is null
		</if>
	</update>
	
	<select id="selectOtherEmpSwipecardCount" parameterType="RepairSwipecard" resultType="int">
		select count(*) from SWIPE.WORKSHOP_LINE_SWIPECARD t 
		where t.id = #{Id} and t.workshopno = #{WorkshopNo} and t.swipe_out is null and t.swipe_type = #{SwipeType} and t.emp_privilege_level = #{PrivilegeLevel} 
		<if test="LineNo!=null">
			and t.lineno = #{LineNo}
		</if>
		<if test="LineNo==null">
			and t.lineno is null
		</if>
	</select>
	
	<update id="updateOtherSwipecardOut" parameterType="RepairSwipecard">
		update  SWIPE.WORKSHOP_LINE_SWIPECARD t set t.swipe_out = #{Swipe_Out} 
		where t.id = #{Id} and t.workshopno = #{WorkshopNo} and t.swipe_out is null and t.swipe_type = #{SwipeType} and t.emp_privilege_level = #{PrivilegeLevel} 
		<if test="LineNo!=null">
			and t.lineno = #{LineNo}
		</if>
		<if test="LineNo==null">
			and t.lineno is null
		</if>
	</update>
	
	<select id="getUUID" parameterType="RawRecord" resultType="String">
		select t.recv_id from SWIPE.WORKSHOP_LINE_STATUS t where t.workshopno = #{WorkshopNo} and t.enabled = 'Y'
		<if test="LineNo!=null">
			and t.lineno = #{LineNo}
		</if>
		<if test="LineNo==null">
			and t.lineno is null
		</if>
	</select>
	
	<select id="selectMachineBindingCount" parameterType="String" resultType="int">
		select count(*) from SWIPE.DEVICE_DEPT_BINDING_ZJ t where t.deviceip = #{deviceip} and t.enabled = 'Y'
	</select>
	
	<select id="selectMachineBinding" parameterType="String" resultType="String">
		select t.costid from SWIPE.DEVICE_DEPT_BINDING_ZJ t where t.deviceip = #{deviceip} and t.enabled = 'Y'
	</select>
	
	<!-- <select id="selectEmpByLineNoAndWorkshopNoProc" statementType="CALLABLE" parameterType="map" >
		<![CDATA[{call SWIPE.ON_LINE_EMP(
	        #{WorkshopNo,mode=IN,jdbcType=VARCHAR},
	        #{ProdLineCode,mode=IN,jdbcType=VARCHAR},
	        #{SwipeCardTime,mode=IN,jdbcType=VARCHAR},
	        #{v_refcur,mode=OUT,jdbcType=CURSOR,javaType=ResultSet,resultMap=DateResult}
	    )}]]>
	</select>
	
    <resultMap  type ="com.swipecard.model.SwipeCardTimeInfos" id="DateResult">
        <result property="EMP_ID" column="EMP_ID"/> 
        <result property="SWIPE_DATE" column="SWIPE_DATE"/> 
    </resultMap> -->
</mapper>  


